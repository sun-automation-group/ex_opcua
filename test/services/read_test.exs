defmodule ExOpcua.Services.ReadTest do
  use ExUnit.Case

  alias ExOpcua.Services.Read

  def test_response do
    # change 0x01-0x0A to change array size
    <<0x0A, 0x00, 0x00, 0x00, 0x09, 0x11, 0x00, 0x28, 0x56, 0xF2, 0xFF, 0xA6, 0x44, 0xD5, 0xCC,
      0x01, 0x09, 0x06, 0x20, 0x00, 0x00, 0x00, 0x78, 0xF3, 0xFF, 0xA6, 0x44, 0xD5, 0xCC, 0x01,
      0x09, 0x14, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x48, 0x61, 0x73, 0x54, 0x79, 0x70, 0x65,
      0x44, 0x65, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0xC8, 0xF3, 0xFF, 0xA6, 0x44,
      0xD5, 0xCC, 0x01, 0x09, 0x15, 0x02, 0x11, 0x00, 0x00, 0x00, 0x48, 0x61, 0x73, 0x54, 0x79,
      0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x08, 0xF5, 0xFF,
      0xA6, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x15, 0x02, 0x45, 0x00, 0x00, 0x00, 0x54, 0x68, 0x65,
      0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72,
      0x65, 0x6E, 0x63, 0x65, 0x73, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x61, 0x20, 0x69, 0x6E,
      0x73, 0x74, 0x61, 0x6E, 0x63, 0x65, 0x20, 0x6E, 0x6F, 0x64, 0x65, 0x20, 0x69, 0x74, 0x73,
      0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6E, 0x74, 0x69, 0x6F, 0x6E,
      0x20, 0x6E, 0x6F, 0x64, 0x65, 0x2E, 0x20, 0xF6, 0xFF, 0xA6, 0x44, 0xD5, 0xCC, 0x01, 0x09,
      0x07, 0x00, 0x00, 0x00, 0x00, 0x2E, 0xF7, 0xFF, 0xA6, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x07,
      0x00, 0x00, 0x00, 0x00, 0x88, 0xF7, 0xFF, 0xA6, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x01, 0x00,
      0xE2, 0xF7, 0xFF, 0xA6, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x01, 0x00, 0x1E, 0xF8, 0xFF, 0xA6,
      0x44, 0xD5, 0xCC, 0x01, 0x09, 0x15, 0x02, 0x10, 0x00, 0x00, 0x00, 0x54, 0x79, 0x70, 0x65,
      0x44, 0x65, 0x66, 0x69, 0x6E, 0x69, 0x74, 0x69, 0x6F, 0x6E, 0x4F, 0x66, 0x5A, 0xF8, 0xFF,
      0xA6, 0x44, 0xD5, 0xCC, 0x01>>
  end

  def test_with_extension do
    <<0x01, 0x00, 0x00, 0x00, 0x0D, 0x16, 0x01, 0x00, 0x60, 0x03, 0x01, 0x81, 0x00, 0x00, 0x00,
      0x60, 0x81, 0xA8, 0x22, 0x98, 0xC9, 0xCC, 0x01, 0x7A, 0x89, 0x5D, 0xA7, 0x44, 0xD5, 0xCC,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3A,
      0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E, 0x73, 0x69, 0x65, 0x6D, 0x65, 0x6E, 0x73, 0x2E, 0x63,
      0x6F, 0x6D, 0x2F, 0x73, 0x37, 0x2D, 0x31, 0x32, 0x30, 0x30, 0x0A, 0x00, 0x00, 0x00, 0x53,
      0x49, 0x45, 0x4D, 0x45, 0x4E, 0x53, 0x20, 0x41, 0x47, 0x16, 0x00, 0x00, 0x00, 0x53, 0x49,
      0x4D, 0x41, 0x54, 0x49, 0x43, 0x20, 0x53, 0x37, 0x2D, 0x31, 0x32, 0x30, 0x30, 0x20, 0x4F,
      0x50, 0x43, 0x20, 0x55, 0x41, 0x0B, 0x00, 0x00, 0x00, 0x46, 0x57, 0x3A, 0x20, 0x56, 0x2E,
      0x34, 0x2E, 0x34, 0x2E, 0x31, 0x02, 0x00, 0x00, 0x00, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x8A, 0x5D, 0xA7, 0x44, 0xD5,
      0xCC, 0x01, 0xF2, 0x89, 0x5D, 0xA7, 0x44, 0xD5, 0xCC, 0x01>>
  end

  def test_data_value do
    <<0x09, 0x15, 0x02, 0x45, 0x00, 0x00, 0x00, 0x54, 0x68, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65,
      0x20, 0x66, 0x6F, 0x72, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6E, 0x63, 0x65, 0x73,
      0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x61, 0x20, 0x69, 0x6E, 0x73, 0x74, 0x61, 0x6E, 0x63,
      0x65, 0x20, 0x6E, 0x6F, 0x64, 0x65, 0x20, 0x69, 0x74, 0x73, 0x20, 0x74, 0x79, 0x70, 0x65,
      0x20, 0x64, 0x65, 0x66, 0x69, 0x6E, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x6E, 0x6F, 0x64, 0x65,
      0x2E, 0x20, 0xF6, 0xFF, 0xA6, 0x44, 0xD5, 0xCC, 0x01>>
  end

  def test_server_status do
    <<0x60, 0x81, 0xA8, 0x22, 0x98, 0xC9, 0xCC, 0x01, 0x12, 0x1F, 0x64, 0xA5, 0x44, 0xD5, 0xCC,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3A,
      0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E, 0x73, 0x69, 0x65, 0x6D, 0x65, 0x6E, 0x73, 0x2E, 0x63,
      0x6F, 0x6D, 0x2F, 0x73, 0x37, 0x2D, 0x31, 0x32, 0x30, 0x30, 0x0A, 0x00, 0x00, 0x00, 0x53,
      0x49, 0x45, 0x4D, 0x45, 0x4E, 0x53, 0x20, 0x41, 0x47, 0x16, 0x00, 0x00, 0x00, 0x53, 0x49,
      0x4D, 0x41, 0x54, 0x49, 0x43, 0x20, 0x53, 0x37, 0x2D, 0x31, 0x32, 0x30, 0x30, 0x20, 0x4F,
      0x50, 0x43, 0x20, 0x55, 0x41, 0x0B, 0x00, 0x00, 0x00, 0x46, 0x57, 0x3A, 0x20, 0x56, 0x2E,
      0x34, 0x2E, 0x34, 0x2E, 0x31, 0x02, 0x00, 0x00, 0x00, 0x30, 0x31, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00>>
  end

  def array_of_strings do
    <<0x01, 0x00, 0x00, 0x00, 0x0D, 0x8C, 0x05, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x68,
      0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6F, 0x70, 0x63, 0x66, 0x6F, 0x75, 0x6E, 0x64, 0x61,
      0x74, 0x69, 0x6F, 0x6E, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x55, 0x41, 0x2F, 0x2C, 0x00, 0x00,
      0x00, 0x75, 0x72, 0x6E, 0x3A, 0x53, 0x49, 0x4D, 0x41, 0x54, 0x49, 0x43, 0x2E, 0x53, 0x37,
      0x2D, 0x31, 0x32, 0x30, 0x30, 0x2E, 0x4F, 0x50, 0x43, 0x2D, 0x55, 0x41, 0x2E, 0x41, 0x70,
      0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x3A, 0x50, 0x4C, 0x43, 0x5F, 0x31,
      0x1F, 0x00, 0x00, 0x00, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6F, 0x70, 0x63, 0x66,
      0x6F, 0x75, 0x6E, 0x64, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x55,
      0x41, 0x2F, 0x44, 0x49, 0x2F, 0x27, 0x00, 0x00, 0x00, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F,
      0x2F, 0x77, 0x77, 0x77, 0x2E, 0x73, 0x69, 0x65, 0x6D, 0x65, 0x6E, 0x73, 0x2E, 0x63, 0x6F,
      0x6D, 0x2F, 0x73, 0x69, 0x6D, 0x61, 0x74, 0x69, 0x63, 0x2D, 0x73, 0x37, 0x2D, 0x6F, 0x70,
      0x63, 0x75, 0x61, 0x0F, 0x00, 0x00, 0x00, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x6F,
      0x70, 0x63, 0x5F, 0x69, 0x6E, 0x74, 0x31, 0x26, 0x85, 0x71, 0xA5, 0x44, 0xD5, 0xCC, 0x01,
      0xEA, 0x84, 0x71, 0xA5, 0x44, 0xD5, 0xCC, 0x01>>
  end

  def idk do
    <<0x0A, 0x00, 0x00, 0x00, 0x09, 0x11, 0x00, 0x2D, 0x32, 0xCA, 0x6B, 0xA5, 0x44, 0xD5, 0xCC,
      0x01, 0x09, 0x06, 0x20, 0x00, 0x00, 0x00, 0x4A, 0xCB, 0x6B, 0xA5, 0x44, 0xD5, 0xCC, 0x01,
      0x09, 0x14, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x48, 0x61, 0x73, 0x53, 0x75, 0x62, 0x74,
      0x79, 0x70, 0x65, 0xA4, 0xCB, 0x6B, 0xA5, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x15, 0x02, 0x0A,
      0x00, 0x00, 0x00, 0x48, 0x61, 0x73, 0x53, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0xEE, 0xCC,
      0x6B, 0xA5, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x15, 0x02, 0x53, 0x00, 0x00, 0x00, 0x54, 0x68,
      0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x6E, 0x6F, 0x6E, 0x2D,
      0x6C, 0x6F, 0x6F, 0x70, 0x69, 0x6E, 0x67, 0x20, 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63,
      0x68, 0x69, 0x63, 0x61, 0x6C, 0x20, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6E, 0x63, 0x65,
      0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x61, 0x72, 0x65, 0x20, 0x75, 0x73, 0x65, 0x64,
      0x20, 0x74, 0x6F, 0x20, 0x64, 0x65, 0x66, 0x69, 0x6E, 0x65, 0x20, 0x73, 0x75, 0x62, 0x20,
      0x74, 0x79, 0x70, 0x65, 0x73, 0x2E, 0xFC, 0xCD, 0x6B, 0xA5, 0x44, 0xD5, 0xCC, 0x01, 0x09,
      0x07, 0x00, 0x00, 0x00, 0x00, 0x2C, 0xD5, 0x6B, 0xA5, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x07,
      0x00, 0x00, 0x00, 0x00, 0xAE, 0xD5, 0x6B, 0xA5, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x01, 0x00,
      0x08, 0xD6, 0x6B, 0xA5, 0x44, 0xD5, 0xCC, 0x01, 0x09, 0x01, 0x00, 0x44, 0xD6, 0x6B, 0xA5,
      0x44, 0xD5, 0xCC, 0x01, 0x09, 0x15, 0x02, 0x0C, 0x00, 0x00, 0x00, 0x48, 0x61, 0x73, 0x53,
      0x75, 0x70, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x80, 0xD6, 0x6B, 0xA5, 0x44, 0xD5, 0xCC,
      0x01>>
  end

  test "decode_response/1 decodes a read response" do
    t = test_response()
    {:ok, res} = Read.decode_response(t)
    results = res.read_results
    assert length(results) == 10
    assert Enum.all?(results, fn r -> r.server_timestamp != nil end)
    assert Enum.all?(results, fn r -> r.value != nil end)
    assert List.first(results).value.identifier == 40
  end

  test "decode_response/1 decodes an extension object" do
    t = test_with_extension()
    {:ok, res} = Read.decode_response(t)
    results = res.read_results

    assert length(results) == 1
    assert res.read_results |> List.first() |> Map.has_key?(:server_timestamp)
  end

  test "decode_response/1 decodes an Array of strings" do
    t = array_of_strings()
    {:ok, res} = Read.decode_response(t)
    results = res.read_results
    assert length(results) == 1
    arr = List.first(results).value
    assert length(arr) == 5
    assert "http://opcfoundation.org/UA/" in arr
  end
end
